###########################################################
# Figure X - Panel A
# vRNA counts for selected genotypes under Favipiravir treatment
# Clean plotting script with reproducible steps
###########################################################

# Load required libraries
library(ggplot2)
library(dplyr)
library(patchwork)

#----------------------------------------------------------
# 1. Import data
#----------------------------------------------------------
# Replace with your actual Excel import
# table_vSeg5 <- readxl::read_excel("plot_vRNA_June_2024.xlsx")

# Convert tibble to data frame if needed
# vRNA <- table_vSeg5 %>%
#   tibble::rownames_to_column() %>%
#   as.data.frame()

#----------------------------------------------------------
# 2. Subset data for 12 h.p.i. + treatment condition
#----------------------------------------------------------
# Example subset (adjust column names if necessary)
hpi_12 <- subset(vRNA, h.p.i. == 12 & treatment == 4)

#----------------------------------------------------------
# 3. Prepare data for two genotype groups
#----------------------------------------------------------
# Group 1: AB series
first_plot <- hpi_12[hpi_12$genotype %in% c("AB", "ABC", "ABD", "ABCD"), ]
# Keep one replicate (first 4 rows, since values are the same)
to_plot <- first_plot[1:4, ]
# Reorder factor levels
my_vec <- c("AB", "ABC", "ABD", "ABCD")
to_plot$genotype <- factor(to_plot$genotype, levels = my_vec)
# Add group label
to_plot$group_type <- "AB series"

# Group 2: WT series
second_plot <- hpi_12[hpi_12$genotype %in% c("WT", "C", "D", "CD"), ]
to_plot2 <- second_plot[1:4, ]
my_vec2 <- c("WT", "C", "D", "CD")
to_plot2$genotype <- factor(to_plot2$genotype, levels = my_vec2)
to_plot2$group_type <- "WT series"

# Combine both groups into one dataframe
panelA_df <- rbind(to_plot, to_plot2)

#----------------------------------------------------------
# 4. Define genotype order for x-axis
#----------------------------------------------------------
panelA_df$genotype <- factor(
  panelA_df$genotype,
  levels = c("WT","C","D","CD","AB","ABC","ABD","ABCD")
)

#----------------------------------------------------------
# 5. Create plot (Panel A)
#----------------------------------------------------------
###########################################################
# Figure X - Panel A
# vRNA counts for selected genotypes under Favipiravir treatment
###########################################################

###########################################################
# Figure X - Panel A
# vRNA counts for selected genotypes under Favipiravir treatment
# With connecting lines between related genotypes
###########################################################
library(ggplot2)
library(dplyr)
library(ggrepel)

# Add genotype column to both datasets (already present)
plot_data <- bind_rows(
  new_table_ordered %>% mutate(series = "AB"),
  new_table2_ordered %>% mutate(series = "WT")
) %>%
  select(grp, RQ, genotype)

# Define connections using genotype names
connectors <- data.frame(
  from = c("WT","WT","C","D","AB","AB","ABC","ABD"),
  to   = c("C","D","CD","CD","ABC","ABD","ABCD","ABCD"),
  color = c("#D55E00","#D55E00","#D55E00","#D55E00","#000000","#000000","#000000","#000000")
)

# Join to get numeric coordinates
connectors <- connectors %>%
  left_join(plot_data, by = c("from" = "genotype")) %>%
  rename(x_from = grp, y_from = RQ) %>%
  left_join(plot_data, by = c("to" = "genotype")) %>%
  rename(x_to = grp, y_to = RQ)

# Check for missing coordinates
connectors[!complete.cases(connectors),]  # should be empty now

# Plot
pA <- ggplot() +
  geom_point(data = new_table_ordered, aes(x = grp, y = RQ), color = "#000000") +
  geom_text_repel(
    data = new_table_ordered,
    aes(x = grp, y = RQ, label = my_vec),
    nudge_x = -0.1,          # move labels further left
    force = 2,                # stronger repulsion
    segment.size = 0.1,       # thickness of connecting line
    min.segment.length = 0.2, # ensures line doesn't cross too far
    size = 6,
    hjust = 1
  ) +
  geom_point(data = new_table2_ordered, aes(x = grp, y = RQ), color = "#D55E00") +
  geom_text_repel(
    data = new_table2_ordered,
    aes(x = grp, y = RQ, label = my_vec2),
    nudge_x = -0.1,
    force = 2,
    segment.size = 0.1,
    min.segment.length = 0.2,
    size = 6,
    hjust = 1
  )+
  geom_segment(data = connectors,
               aes(x = x_from, y = y_from, xend = x_to, yend = y_to, color = color),
               inherit.aes = FALSE, linewidth = 0.8) +
  scale_color_identity() +
  scale_y_log10(limits = c(3,90)) +
  labs(x = "Genotypes",
       y = expression("vRNA counts (log"[10]*")")) +
  theme_minimal(base_size = 12) +
  theme(axis.text.x = element_blank(),
        axis.ticks.x = element_blank())

pA


#----------------------------------------------------------
# 6. Combine with other panel (Panel B)
#----------------------------------------------------------
# Example: once you define pB, combine as:
# final_plot <- pA + pB + plot_layout(ncol = 2)
# ggsave("FigureX_panelAB.pdf", final_plot, width = 7, height = 3.5)
